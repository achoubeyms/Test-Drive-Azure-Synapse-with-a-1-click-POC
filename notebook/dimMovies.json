{
	"name": "dimMovies",
	"properties": {
		"nbformat": 0,
		"nbformat_minor": 0,
		"bigDataPool": {
			"referenceName": "synaps01sparkp",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/828966ab-879b-4f3d-ac3c-6a83706eb702/resourceGroups/rg-synapse/providers/Microsoft.Synapse/workspaces/synapse01ws/bigDataPools/synaps01sparkp",
				"name": "synaps01sparkp",
				"type": "Spark",
				"endpoint": "https://synapse01ws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/synaps01sparkp",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"import pandas as pd"
				],
				"attachments": null,
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"source": [
					"# Read in movies csv from fourth coffee\r\n",
					"#data_path = spark.read.load('abfss://srh@southridgeadl01.dfs.core.windows.net/raw/fourth-coffee/Movies.csv', format='csv', header=True)\r\n",
					"data_path = spark.read.load('abfss://synapse01fs@synapse01adl.dfs.core.windows.net/raw/fourth-coffee/Movies.csv', format='csv', header=True)\r\n",
					"\r\n",
					"fourth_coffee_df = data_path.toPandas()\r\n",
					"fourth_coffee_df['DataSource'] = 'Fourth Coffee'\r\n",
					"fourth_coffee_df.head()"
				],
				"attachments": null,
				"execution_count": 35
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"# Read in movies csv from van arsdel\r\n",
					"data_path = spark.read.load('abfss://synapse01fs@synapse01adl.dfs.core.windows.net/raw/van-arsdel/dboMovies.csv', format='csv', header=True)\r\n",
					"\r\n",
					"van_arsdel_df = data_path.toPandas()\r\n",
					"van_arsdel_df['DataSource'] = 'Van Arsdel'\r\n",
					"van_arsdel_df.head()"
				],
				"attachments": null,
				"execution_count": 36
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"# Read in movies csv from van arsdel\r\n",
					"data_path = spark.read.load('abfss://synapse01fs@synapse01adl.dfs.core.windows.net/raw/cosmodb/movies.csv', format='csv', header=True)\r\n",
					"\r\n",
					"cosmos_df = data_path.toPandas()\r\n",
					"cosmos_df['DataSource'] = 'Southridge'\r\n",
					"cosmos_df.head()"
				],
				"attachments": null,
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"movies_df1 = fourth_coffee_df.append(van_arsdel_df, sort=False)\r\n",
					"movies_df = movies_df1.append(cosmos_df, sort=False)\r\n",
					"movies_df['Category'] = movies_df['Category'].fillna(movies_df['genre'])\r\n",
					"movies_df['Rating'] = movies_df['Rating'].fillna(movies_df['rating'])\r\n",
					"movies_df['RunTimeMin'] = movies_df['RunTimeMin'].fillna(movies_df['runtime'])\r\n",
					"movies_df['MovieTitle'] = movies_df['MovieTitle'].fillna(movies_df['title'])\r\n",
					"movies_df['MovieID'] = movies_df['MovieID'].fillna(movies_df['id'])\r\n",
					"movies_df['Rating'] = movies_df['Rating'].replace('PG=13','PG-13')\r\n",
					"movies_df.head()"
				],
				"attachments": null,
				"execution_count": 38
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Create Categories Dimension Table"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"categories_df_dedupe = movies_df[['Category']].drop_duplicates()\r\n",
					"len(categories_df_dedupe)"
				],
				"attachments": null,
				"execution_count": 39
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"categories_df_dedupe = categories_df_dedupe.reset_index(drop=True).reset_index()\r\n",
					"categories_df_dedupe.head(10)"
				],
				"attachments": null,
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"categories_sparkdf = spark.createDataFrame(categories_df_dedupe)\r\n",
					"categories_sparkdf = categories_sparkdf.coalesce(1)\r\n",
					"categories_sparkdf.write.option(\"header\",\"true\").mode(\"OVERWRITE\").csv('abfss://synapse01fs@synapse01adl.dfs.core.windows.net/conformed/Categories')\r\n",
					""
				],
				"attachments": null,
				"execution_count": 41
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Create Ratings Dimension Table"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"ratings_df_dedupe = movies_df[['Rating']].drop_duplicates()\r\n",
					"len(ratings_df_dedupe)"
				],
				"attachments": null,
				"execution_count": 42
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"ratings_df_dedupe = ratings_df_dedupe.reset_index(drop=True).reset_index()\r\n",
					"ratings_df_dedupe.head()"
				],
				"attachments": null,
				"execution_count": 43
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"ratings_sparkdf = spark.createDataFrame(ratings_df_dedupe)\r\n",
					"ratings_sparkdf = ratings_sparkdf.coalesce(1)\r\n",
					"ratings_sparkdf.write.option(\"header\",\"true\").mode(\"OVERWRITE\").csv('abfss://synapse01fs@synapse01adl.dfs.core.windows.net/conformed/Ratings')"
				],
				"attachments": null,
				"execution_count": 44
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Create Movies Dimension Table"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"print (len(fourth_coffee_df))\r\n",
					"print (len(van_arsdel_df))\r\n",
					"print (len(cosmos_df))\r\n",
					"print (len(movies_df))"
				],
				"attachments": null,
				"execution_count": 45
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"movies_df_dedupe = movies_df[['MovieID','MovieTitle','Category','Rating','RunTimeMin']].drop_duplicates()\r\n",
					"print(len(movies_df_dedupe))"
				],
				"attachments": null,
				"execution_count": 46
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"movies_df_dedupe.isnull().sum()"
				],
				"attachments": null,
				"execution_count": 47
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"movies_df_dedupe.head()"
				],
				"attachments": null,
				"execution_count": 48
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"movies_df_dedupe = movies_df_dedupe.reset_index()"
				],
				"attachments": null,
				"execution_count": 49
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"movies_df_dedupe.head()"
				],
				"attachments": null,
				"execution_count": 50
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"movies_df_dedupe_sk = pd.merge(movies_df_dedupe, categories_df_dedupe, on='Category', how='left')\r\n",
					"movies_df_dedupe_sk = movies_df_dedupe_sk.drop('Category', axis=1)\r\n",
					"movies_df_dedupe_sk = movies_df_dedupe_sk.rename(columns={'index_y':'MovieCategorySK'})\r\n",
					"movies_df_dedupe_sk.head()"
				],
				"attachments": null,
				"execution_count": 51
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"movies_df_dedupe_sk = pd.merge(movies_df_dedupe_sk, ratings_df_dedupe, on='Rating', how='left')\r\n",
					"movies_df_dedupe_sk = movies_df_dedupe_sk.drop('Rating', axis=1)\r\n",
					"movies_df_dedupe_sk = movies_df_dedupe_sk.rename(columns={'index':'MovieRatingSK'})\r\n",
					"movies_df_dedupe_sk = movies_df_dedupe_sk.rename(columns={'index_x':'MovieSK'})\r\n",
					"movies_df_dedupe_sk.head()"
				],
				"attachments": null,
				"execution_count": 52
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"movies_df_dedupe_sk['MovieSK'] = movies_df_dedupe_sk['MovieSK'].astype(int)\r\n",
					"movies_df_dedupe_sk['MovieID'] = movies_df_dedupe_sk['MovieID'].astype(str)\r\n",
					"movies_df_dedupe_sk['MovieTitle'] = movies_df_dedupe_sk['MovieTitle'].astype(str)\r\n",
					"movies_df_dedupe_sk['MovieCategorySK'] = movies_df_dedupe_sk['MovieCategorySK'].astype(int)\r\n",
					"movies_df_dedupe_sk['MovieRatingSK'] = movies_df_dedupe_sk['MovieRatingSK'].astype(int)\r\n",
					"movies_df_dedupe_sk['RunTimeMin'] = movies_df_dedupe_sk['RunTimeMin'].astype(float)"
				],
				"attachments": null,
				"execution_count": 53
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"movies_sparkdf = spark.createDataFrame(movies_df_dedupe_sk) "
				],
				"attachments": null,
				"execution_count": 54
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"movies_sparkdf = movies_sparkdf.coalesce(1)"
				],
				"attachments": null,
				"execution_count": 55
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"movies_sparkdf.write.option(\"header\",\"true\").mode(\"OVERWRITE\").csv('abfss://synapse01fs@synapse01adl.dfs.core.windows.net/conformed/Movies')"
				],
				"attachments": null,
				"execution_count": 56
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"#categories_sparkdf.write.mode(\"OVERWRITE\").csv('abfss://synapse01fs@synapse01adl.dfs.core.windows.net/Categories')"
				],
				"attachments": null,
				"execution_count": 57
			}
		]
	}
}